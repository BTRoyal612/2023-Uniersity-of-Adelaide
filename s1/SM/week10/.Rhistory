X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
M <- lm(new_df$difference ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
mtext("Residuals vs Fitted plot")
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
title("Figure 1. Residuals vs. Fitted Plot for Linear Regression Model",
line = -1, cex.main = 1.2)
mtext("The residuals appear randomly scattered around 0, indicating that the linear regression model is a good fit for the data.",
side = 1, line = 4)
plot(M)
plot(M)[0]
plot(M, which=1)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 0.1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1.5, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 2)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 5)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 4)
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a standard normal distribution. The red line represents the expected quantiles if the data were normally distributed.", side = 1, line = 3)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- tibble(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
y0 <- 3.682 + 12.892 - (-14.758)
y0
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, tidymodels)
df <- read.csv("AFL2019.csv")
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
AFL_teams_2019 <- unique(df$Home.Team)
AFL_teams_2019
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
y <- new_df$difference
M <- lm(y ~ X)
par(mar = c(9, 5, 2, 3))
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away
teams and the difference in score. The red line represents the mean score
difference value.", side = 1, line = 8)
par(mar = c(9, 5, 2, 3))
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a
standard normal distribution. The red line represents the expected
quantiles if the data were normally distributed.", side = 1, line = 8)
broom::tidy(M)
broom::glance(M)
y0 <- 3.682 + 12.892 - (-14.758)
y0
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, gglm, skimr, MASS)
data <- read_delim(("companies.txt"), delim = "\t")
data
data <- data %>%
mutate(Employees = as.numeric(Employees))
skim(data)
data %>%
ggplot(aes(MarketValue)) +
geom_histogram(col = "black", fill = "orange") +
ggtitle("Histogram of the MarketValue")
data %>%
ggplot(aes(Assets, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets")
data %>%
ggplot(aes(Sales, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales")
data %>%
ggplot(aes(Profits, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits")
data %>%
ggplot(aes(CashFlow, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow")
data %>%
ggplot(aes(Employees, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees")
data %>%
ggplot(aes(log(Assets), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets on a log scale")
data %>%
ggplot(aes(log(Sales), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales on a log scale")
data %>%
ggplot(aes(log(Profits), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits on a log scale")
data %>%
ggplot(aes(log(CashFlow), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow on a log scale")
data %>%
ggplot(aes(log(Employees), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees on a log scale")
M1 <- lm(MarketValue ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M1)
gglm(M1)
boxcox(M1, lambda=seq(0, 0.5, by=0.1))
bc <- boxcox(M1)
bc
lambda <- bc$x[which.max(bc$y)]
lambda2 <- 0.2
M2 <- lm(((MarketValue^lambda - 1)/lambda) ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M2)
M3 <- lm(((MarketValue^lambda2 - 1)/lambda2) ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M3)
gglm(M2)
gglm(M3)
new_company <- tibble(
Assets = 1065,
Sales = 642,
Profits = 30,
CashFlow = 59,
Employees = 3.5
)
transform_pred <- predict(M2, newdata=new_company, interval="prediction", level=0.95)
market_pred <- exp(log(transform_pred*lambda + 1)/lambda)
market_pred
transform_pred2 <- predict(M3, newdata=new_company, interval="prediction", level=0.95)
market_pred2 <- exp(log(transform_pred*lambda2 + 1)/lambda2)
market_pred2
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, gglm, skimr, MASS)
data <- read_delim(("companies.txt"), delim = "\t")
data
data <- data %>%
mutate(Employees = as.numeric(Employees))
skim(data)
data %>%
ggplot(aes(MarketValue)) +
geom_histogram(col = "black", fill = "orange") +
ggtitle("Histogram of the MarketValue")
data %>%
ggplot(aes(Assets, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets")
data %>%
ggplot(aes(Sales, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales")
data %>%
ggplot(aes(Profits, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits")
data %>%
ggplot(aes(CashFlow, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow")
data %>%
ggplot(aes(Employees, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees")
data %>%
ggplot(aes(log(Assets), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets on a log scale")
data %>%
ggplot(aes(log(Sales), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales on a log scale")
data %>%
ggplot(aes(log(Profits), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits on a log scale")
data %>%
ggplot(aes(log(CashFlow), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow on a log scale")
data %>%
ggplot(aes(log(Employees), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees on a log scale")
M1 <- lm(MarketValue ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M1)
gglm(M1)
bc <- boxcox(M1)
bc
lambda <- bc$x[which.max(bc$y)]
lambda
M2 <- lm(((MarketValue^lambda - 1)/lambda) ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M2)
gglm(M2)
new_company <- tibble(
Assets = 1065,
Sales = 642,
Profits = 30,
CashFlow = 59,
Employees = 3.5
)
transform_pred <- predict(M2, newdata=new_company, interval="prediction", level=0.95)
market_pred <- exp(log(transform_pred*lambda + 1)/lambda)
market_pred
x <- seq(1,10, by = 1)
y <- c(1.7, 5.56, 8.96, 9.74, 13.1, 15.0, 15.8, 16.9, 18.4, 23.1)X <- cbind(x,y)
x <- seq(1,10, by = 1)
y <- c(1.7, 5.56, 8.96, 9.74, 13.1, 15.0, 15.8, 16.9, 18.4, 23.1)
X <- cbind(x,y)
H <- X %*% solve(t(X) %*% X) %*% t(X)
H
X
X <- seq(1,10, by = 1)
H <- X %*% solve(t(X) %*% X) %*% t(X)
H
X
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, gglm, skimr, MASS)
data <- read_delim(("companies.txt"), delim = "\t")
data
data <- data %>%
mutate(Employees = as.numeric(Employees))
skim(data)
data %>%
ggplot(aes(MarketValue)) +
geom_histogram(col = "black", fill = "orange") +
labs(
title = "Histogram of the MarketValue",
caption = "The value is concentrated near 0, with
some outliners go beyond 25000"
)
data %>%
ggplot(aes(Assets, MarketValue)) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs Assets",
caption = "There is a cluster for Assets under 10000 millions
with some spread, indicating weak linearity."
)
data %>%
ggplot(aes(Sales, MarketValue)) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs Sales",
caption = "There is a cluster for Sales under 10000 millions
with some spread, indicating weak linearity."
)
data %>%
ggplot(aes(Profits, MarketValue)) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs Profits",
caption = "There is a cluster near 0 Profits, with some negative
values and low spread, indicating some linearity."
)
data %>%
ggplot(aes(CashFlow, MarketValue)) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs CashFlow",
caption = "There is a cluster near 0 CashFlow, with some negative
values and low spread, indicating some linearity."
)
data %>%
ggplot(aes(Employees, MarketValue)) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs Employees",
caption = "There is a cluster for Employees under 100 thousands,
with some curvature, indicating weak linearity."
)
data %>%
ggplot(aes(log(Assets), log(MarketValue))) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs log(Assets)",
caption = "The log scale declusters and improves the linearity between
predictor and response, with some outliners"
)
data %>%
ggplot(aes(log(Sales), log(MarketValue))) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs log(Sales)",
caption = "The log scale declusters and improves the linearity between
predictor and response, with some outliners"
)
data %>%
ggplot(aes(log(Profits), log(MarketValue))) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs log(Profit)",
caption = "There are NaNs produced due to some negative values
in Profits, and there is a slight curvature."
)
data %>%
ggplot(aes(log(CashFlow), log(MarketValue))) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs log(CashFlow)",
caption = "There are NaNs produced due to some negative values
in CashFlow, and there is a slight curvature."
)
data %>%
ggplot(aes(log(Employees), log(MarketValue))) +
geom_point() +
geom_smooth(method=lm) +
labs(
title = "Scatterplot of MarketValue vs log(Employees)",
caption = "The log scale declusters and improves the linearity between
predictor and response, with some outliners"
)
M1 <- lm(MarketValue ~ log(Assets) + log(Sales) + Profits + CashFlow
+ log(Employees), data=data)
summary(M1)
gglm(M1)
bc <- boxcox(M1)
lambda <- bc$x[which.max(bc$y)]
lambda
M2 <- lm(((MarketValue^lambda - 1)/lambda) ~ log(Assets) + log(Sales) + Profits
+ CashFlow + log(Employees), data=data)
summary(M2)
gglm(M2)
new_company <- tibble(
Assets = 1065,
Sales = 642,
Profits = 30,
CashFlow = 59,
Employees = 3.5
)
transform_pred <- predict(M2, newdata=new_company, interval="prediction", level=0.95)
market_pred <- exp(log(transform_pred*lambda + 1)/lambda)
market_pred
2*(log(159.42)-log(83.35))
2log(1.91265)
2*log(1.91265)
2*(log(168.11)-log(98.98))
exp(1.059401)
2*(168.11-98.98)
2*(159.42-83.35)
250*0.6*0.4
2*(196.56-99.65)
x <- 186.03
y <- 92.69
2*(x-y)
210*0.1*0.9
x <- 196.56
y <- 101.37
2*(x-y)
setwd("D:/2023-University-of-Adelaide/s1/SM/week10")
knitr::opts_chunk$set(
obsecho = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = '../'
)
pacman::p_load(tidyverse, tidymodels, janitor, ggplot2, nlme)
data <- read.delim("RIKZ.txt")
data
pacman::p_load(tidyverse, tidymodels, janitor, ggplot2, nlme, skimr)
skim(data)
data <- clean_names(data)
skim(data)
m0 <- lm(richness ~ exposure + nap + beach, data=data)
summary(m0)
annova(m0)
m0 <- lm(richness ~ exposure + nap + beach, data=data)
summary(m0)
anova(m0)
m1 <- gls(richness ~ exposure + nap + beach, data=data, random)
count(data$exposure)
count(exposure, data=data)
count(exposure, data=data)
data <- clean_names(data)
skim(data)
data <- data %>%
mutate(
beach = as.factor(beach)
)
data
m1 <- lme(richness ~ nap, data=data, random = ~ 1 | beach)
m1 <- lme(richness ~ nap, data=data, random = ~ 1 | beach)
summary(m1)
annova(m1)
m1 <- lme(richness ~ nap, data=data, random = ~ 1 | beach)
summary(m1)
anova(m1)
lme_int_pred <- predict(m1)
df_int <- df %>% mutate(pred=lme_int_pred)
lme_int_pred <- predict(m1)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(lme_int, level=0)
lme_int_pred <- predict(m1)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(m1, level=0)
df_int <- df_int %>% mutate(group_pred=lme_int_group_pred)
df_int %>%
ggplot(aes(nap, pred, color=beach)) + geom_line() +
geom_point(aes(y=richness)) +
geom_lines(aes(y=group_pred), color='black', size=1.5)
lme_int_pred <- predict(m1)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(m1, level=0)
df_int <- df_int %>% mutate(group_pred=lme_int_group_pred)
df_int %>%
ggplot(aes(nap, pred, color=beach)) + geom_line() +
geom_point(aes(y=richness)) +
geom_line(aes(y=group_pred), color='black', size=1.5)
m2 <- lme(richness ~ nap, data=data, random = ~ 1 + nap | beach)
summary(m2)
anova(m2)
lme_int_pred <- predict(m2)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(m2, level=0)
df_int <- df_int %>% mutate(group_pred=lme_int_group_pred)
df_int %>%
ggplot(aes(nap, pred, color=beach)) + geom_line() +
geom_point(aes(y=richness)) +
geom_line(aes(y=group_pred), color='black', size=1.5)
m3 <- lme(richness ~ nap + exposure, data=data, random = ~ 1 | beach)
summary(m3)
anova(m3)
m3 <- lme(richness ~ nap + exposure, data=data, random = ~ 1 | beach)
summary(m3)
anova(m3)
lme_int_pred <- predict(m1)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(m1, level=0)
df_int <- df_int %>% mutate(group_pred=lme_int_group_pred)
df_int %>%
ggplot(aes(nap, pred, color=beach)) + geom_line() +
geom_point(aes(y=richness)) +
geom_line(aes(y=group_pred), color='black', size=1.5)
lme_int_pred <- predict(m3)
df_int <- data %>% mutate(pred=lme_int_pred)
lme_int_group_pred <- predict(m3, level=0)
df_int <- df_int %>% mutate(group_pred=lme_int_group_pred)
df_int %>%
ggplot(aes(nap, pred, color=beach)) + geom_line() +
geom_point(aes(y=richness)) +
geom_line(aes(y=group_pred), color='black', size=1.5)
m4 <- lme(richness ~ nap + exposure, data=data, random = ~ 1+ nap + exposure| beach)
lme_int_pred <- predict(m4)

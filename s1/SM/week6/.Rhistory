X
X <- model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X)
X <- model.matrix(difference ~ Home.Team - Away.Team - 1, data=new_df)
head(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
head(X1)
head(X2)
temp <- X1-X2
head(temp)
?model.matrix
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X1)
head(X2)
temp <- X1-X2
head(temp)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X1)
head(X2)
head(X)
temp <- X1-X2
head(temp)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df, intercept=FALSE)
head(X)
temp <- X1-X2
head(temp)
head(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df, intercept=FALSE)
head(X)
X
View(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept=FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept=FALSE)
X1-X2
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept=FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept=FALSE)
temp <- X1-X2
View(temp)
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df)
temp <- X1-X2
View(X1)
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df)
temp <- X1-X2
temp[1:]
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df, intercept = TRUE)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df, intercept = FALSE)
temp <- X1-X2
View(X1)
View(X2)
View(X1)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept = TRUE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept = FALSE)
temp <- X1-X2
M <- lm(difference ~ temp, data=new_df)
summary(M)
plot(M)
M <- lm(new_df$difference ~ temp)
summary(M)
plot(M)
M <- lm(new_df$difference ~ temp-1)
summary(M)
plot(M)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept = FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept = FALSE)
temp <- X1-X2
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[:-1]
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[:-1]
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[,-1]
View(M)
M <- lm(new_df$difference ~ M)
summary(M)
plot(M)
M <- lm(new_df$difference ~ X)
summary(M)
plot(M)
View(X)
View(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
M <- lm(new_df$difference ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
mtext("Residuals vs Fitted plot")
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
title("Figure 1. Residuals vs. Fitted Plot for Linear Regression Model",
line = -1, cex.main = 1.2)
mtext("The residuals appear randomly scattered around 0, indicating that the linear regression model is a good fit for the data.",
side = 1, line = 4)
plot(M)
plot(M)[0]
plot(M, which=1)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 0.1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1.5, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 2)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 5)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 4)
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a standard normal distribution. The red line represents the expected quantiles if the data were normally distributed.", side = 1, line = 3)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- tibble(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
y0 <- 3.682 + 12.892 - (-14.758)
y0
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, tidymodels)
df <- read.csv("AFL2019.csv")
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
AFL_teams_2019 <- unique(df$Home.Team)
AFL_teams_2019
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
y <- new_df$difference
M <- lm(y ~ X)
par(mar = c(9, 5, 2, 3))
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away
teams and the difference in score. The red line represents the mean score
difference value.", side = 1, line = 8)
par(mar = c(9, 5, 2, 3))
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a
standard normal distribution. The red line represents the expected
quantiles if the data were normally distributed.", side = 1, line = 8)
broom::tidy(M)
broom::glance(M)
y0 <- 3.682 + 12.892 - (-14.758)
y0
setwd("D:/2023-University-of-Adelaide/s1/SM/assign2")
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, gglm, skimr, MASS)
data <- read_delim(("companies.txt"), delim = "\t")
data
data <- data %>%
mutate(Employees = as.numeric(Employees))
skim(data)
data %>%
ggplot(aes(MarketValue)) +
geom_histogram(col = "black", fill = "orange") +
ggtitle("Histogram of the MarketValue")
data %>%
ggplot(aes(Assets, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets")
data %>%
ggplot(aes(Sales, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales")
data %>%
ggplot(aes(Profits, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits")
data %>%
ggplot(aes(CashFlow, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow")
data %>%
ggplot(aes(Employees, MarketValue)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees")
data %>%
ggplot(aes(log(Assets), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets on a log scale")
data %>%
ggplot(aes(log(Sales), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Sales on a log scale")
data %>%
ggplot(aes(log(Profits), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Profits on a log scale")
data %>%
ggplot(aes(log(CashFlow), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs CashFlow on a log scale")
data %>%
ggplot(aes(log(Employees), log(MarketValue))) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Employees on a log scale")
M1 <- lm(MarketValue ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M1)
gglm(M1)
bc <- boxcox(M1)
bc
lambda <- bc$x[which.max(bc$y)]
lambda
M2 <- lm(((MarketValue^lambda - 1)/lambda) ~ log(Assets) + log(Sales) + Profits + CashFlow + log(Employees), data=data)
summary(M2)
gglm(M2)
new_company <- tibble(
Assets = 1065,
Sales = 642,
Profits = 30,
CashFlow = 59,
Employees = 3.5
)
transform_pred <- predict(M2, newdata=new_company, interval="prediction", level=0.95)
market_pred <- exp(log(transform_pred*lambda + 1)/lambda)
market_pred
boxcox(M1, seq=(0, 0.5, by=0.1))
boxcox(M1, seq=(0, 0.5, lambda=0.1))
boxcox(M1, lambda=seq(0, 0.5, by=0.1))
setwd("D:/2023-University-of-Adelaide/s1/SM/week6")
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, gglm, broom)
squid <- read_delim(("Squid.txt"), delim = "\t")
head(squid)
squid %>%
mutate(
MONTH = as.factor(MONTH)
)
head(squid)
squid %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(MONTH, DML)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
pivot_longer(-MONTH) %>%
ggplot(aes(Testisweight, DML)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
mutate(
MONTH = as.factor(MONTH)
)
squid <- squid %>%
mutate(
MONTH = as.factor(MONTH)
)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
select(Testisweight, MONTH, DML) %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
pivot_longer(-Testisweight) %>%
ggplot(aes(values, Testisweight, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
pivot_longer(-MONTH) %>%
ggplot(aes(values, MONTH, fill=value)) +
geom_point() +
facet_wrap(~name, scales = "free") +
geom_smooth(method = lm)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
ggtitle("Scatterplot of MarketValue vs Assets")
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point()
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_boxplot()
squid %>%
ggplot(aes(MONTH, Testisweight)) +
geom_boxplot()
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTh)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
facet_wrap(MONTH) +
geom_point()
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() %>%
facet_wrap(MONTH)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(MONTH, data=squid)
pacman::p_load(tidyverse, gglm, broom, nlme)
squid %>%
ggplot(aes(DML, Testisweight)) +
geom_point() +
facet_wrap(~MONTH)
squid_lm <- gls(data=squid, Testisweight ~ MONTH + DML)
squid_lm <- gls(data=squid, Testisweight ~ MONTH + DML)
gglm(squid_lm)
squid_lm <- gls(data=squid, Testisweight ~ MONTH + DML)
summary(squid_lm)
v1_fixed <- varFixed(~DML)
v1_fixed <- varFixed(~DML)
squid_lm1 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = "fixed variance")
v1_fixed <- varFixed(~DML)
squid_lm1 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = v1_fixed)
v1_fixed <- varFixed(~DML)
squid_lm1 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = v1_fixed)
summary(squid_lm1)
squid_lm <- gls(data=squid, Testisweight ~ MONTH + DML)
summary(squid_lm)
gglm(squid_lm)
squid_lm <- gls(data=squid, Testisweight ~ MONTH + DML)
summary(squid_lm)
plot(squid_lm)
v1_fixed <- varFixed(~DML)
squid_lm1 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = v1_fixed)
summary(squid_lm1)
plot(squid_lm1)
v2_ident <- varIdent(form = ~ 1 | MONTH)
squid_lm2 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = v2_ident)
summary(squid_lm2)
plot(squid_lm2)
anova(squid_lm, squid_lm1)
anova(squid_lm, squid_lm2)
v3_power <- varPower(form = ~DML)
squid_lm3 <- gls(data=squid, Testisweight ~ MONTH + DML, weights = v3_power)
summary(squid_lm3)
plot(squid_lm3)
squid_lm <- gls(data=squid, Testisweight ~ MONTH * DML)
summary(squid_lm)
plot(squid_lm)
v1_fixed <- varFixed(~DML)
squid_lm1 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v1_fixed)
summary(squid_lm1)
plot(squid_lm1)
v2_ident <- varIdent(form = ~ 1 | MONTH)
squid_lm2 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v2_ident)
summary(squid_lm2)
plot(squid_lm2)
v3_power <- varPower(form = ~DML)
squid_lm3 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v3_power)
summary(squid_lm3)
plot(squid_lm3)
v4_constpower <- varConstPower(form = ~DML)
squid_lm3 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v4_constpower)
summary(squid_lm4)
v4_constpower <- varConstPower(form = ~DML)
squid_lm4 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v4_constpower)
summary(squid_lm4)
plot(squid_lm4)
anova(squid_lm, squid_lm4)
v3_power <- varPower(form = ~DML)
squid_lm3 <- gls(data=squid, Testisweight ~ MONTH * DML, weights = v3_power)
summary(squid_lm3)
plot(squid_lm3)
anova(squid_lm,squid_lm3)

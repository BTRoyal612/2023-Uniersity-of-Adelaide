for (tempx in x){
x_bar = x_bar + tempx
}
x_bar = x_bar/x_len
y_bar = 0
y_len = length(y)
for (tempy in y){
y_bar = y_bar + tempy
}
y_bar = y_bar/y_len
Sxx = 0
for (i in (1:x_len)) {
Sxx = Sxx + (x[i] - x_bar)^2
}
Syy = 0
for (i in (1:x_len)) {
Syy = Syy + (y[i] - y_bar)^2
}
Sxy = 0
for (i in (1:x_len)) {
Sxy = Sxy + (x[i] - x_bar)*(y[i] - y_bar)
}
B1 = Sxy/Sxx
n = x_len
Se_2 = (1/(n-2))*(Syy-B1^2*Sxx)
t = (B1)/(sqrt(Se_2/Sxx))
return (t)
}
estimate_p_value <- function(x, y) {
x_bar = 0
x_len = length(x)
for (tempx in x){
x_bar = x_bar + tempx
}
x_bar = x_bar/x_len
y_bar = 0
y_len = length(y)
for (tempy in y){
y_bar = y_bar + tempy
}
y_bar = y_bar/y_len
Sxx = 0
for (i in (1:x_len)) {
Sxx = Sxx + (x[i] - x_bar)^2
}
Syy = 0
for (i in (1:x_len)) {
Syy = Syy + (y[i] - y_bar)^2
}
Sxy = 0
for (i in (1:x_len)) {
Sxy = Sxy + (x[i] - x_bar)*(y[i] - y_bar)
}
B1 = Sxy/Sxx
n = x_len
Se_2 = (1/(n-2))*(Syy-B1^2*Sxx)
t = (B1)/(sqrt(Se_2/Sxx))
p = pt(t, n-2)
return (p)
}
estimateB0(x, y)
estimateB1(x, y)
estimate_test_statistic(x,y)
estimate_p_value(x,y)
25.9244-2.6224*4.7
pf(0.05,2,49,lower.tail = FALSE)
25.6275-2.5457*1.8
pf(0.05,2,12,lower.tail = FALSE)
pf(0.05,2,12,lower.tail = TRUE)
qf(0.05,2,12,lower.tail = FALSE)
26.1005 - 2.6824*5.9
qf(0.05,2,49,lower.tail = FALSE)
61.83*0.00009825
8.423*0.0002897
y <- c(0.1, 0.2, 0.3, 0.5, 0.6, 0.1, 0.2, 0.2, 0.3, 0.2)
n <- length(y)
y
n
lambda <- 1 / mean(y)
lambda
mean(y)
version()
R.version
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, tidymodels)
m <- new_df %>% lm(difference ~ Home.Team - Away.team)
df <- read.csv("AFL2019.csv")
df
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
df
AFL_teams_2019 <- df$Home.Team
AFL_teams_2019
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
m <- new_df %>% lm(difference ~ Home.Team - Away.team)
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
m <- lm(difference ~ Home.Team - Away.team, data=new_df)
m <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(m)
X <- model.matrix(m)
X
m <- lm(difference ~ Home.Team + Away.Team, data=new_df)
summary(m)
X <- model.matrix(m)
X
m <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(m)
X <- model.matrix(m)
X
m <- lm(difference ~ Home.Team - Away.Team + 0, data=new_df)
summary(m)
X <- model.matrix(m)
X
m <- lm(difference ~ Home.Team - Away.Team + 1, data=new_df)
summary(m)
X <- model.matrix(m)
X
m <- lm(difference ~ Home.Team - Away.Team - 1, data=new_df)
summary(m)
X <- model.matrix(m)
X
X <- model.matrix(difference ~ Home.Team - Away.Team - 1)
X <- model.matrix(difference ~ Home.Team - Away.Team - 1)
X <- model.matrix(difference ~ Home.Team - Away.Team - 1, data=new_df)
X
m <- lm(difference ~ Home.Team - Away.Team, data=new_df)
m <- lm(difference ~ Home.Team - Away.Team, data=new_df)
m
M <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(M)
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, tidymodels)
df <- read.csv("AFL2019.csv")
df
df <- read.csv("AFL2019.csv")
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
df
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
AFL_teams_2019 <- unique(df$Home.Team)
AFL_teams_2019
M <- lm(difference ~ Home.Team - Away.Team, data=new_df)
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
M <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(M)
plot(M)
M <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(M)
plot(M)
M <- lm(difference ~ Home.Team - Away.Team, data=new_df)
summary(M)
plot(M)
View(M)
X <- model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
X
X <- model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X)
X <- model.matrix(difference ~ Home.Team - Away.Team - 1, data=new_df)
head(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
head(X1)
head(X2)
temp <- X1-X2
head(temp)
?model.matrix
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X1)
head(X2)
temp <- X1-X2
head(temp)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df)
head(X1)
head(X2)
head(X)
temp <- X1-X2
head(temp)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df, intercept=FALSE)
head(X)
temp <- X1-X2
head(temp)
head(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <-model.matrix(difference ~ Home.Team - Away.Team, data=new_df, intercept=FALSE)
head(X)
X
View(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept=FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept=FALSE)
X1-X2
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept=FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept=FALSE)
temp <- X1-X2
View(temp)
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df)
temp <- X1-X2
View(X1)
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df)
temp <- X1-X2
temp[1:]
X1 <- model.matrix(difference ~ Home.Team - 1, data=new_df, intercept = TRUE)
X2 <- model.matrix(difference ~ Away.Team - 1, data=new_df, intercept = FALSE)
temp <- X1-X2
View(X1)
View(X2)
View(X1)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept = TRUE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept = FALSE)
temp <- X1-X2
M <- lm(difference ~ temp, data=new_df)
summary(M)
plot(M)
M <- lm(new_df$difference ~ temp)
summary(M)
plot(M)
M <- lm(new_df$difference ~ temp-1)
summary(M)
plot(M)
X1 <- model.matrix(difference ~ Home.Team, data=new_df, intercept = FALSE)
X2 <- model.matrix(difference ~ Away.Team, data=new_df, intercept = FALSE)
temp <- X1-X2
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[:-1]
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[:-1]
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
M <- (X1-X2)[,-1]
View(M)
M <- lm(new_df$difference ~ M)
summary(M)
plot(M)
M <- lm(new_df$difference ~ X)
summary(M)
plot(M)
View(X)
View(X)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
M <- lm(new_df$difference ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
summary(M)
plot(M)
y <- new_df$difference
M <- lm(y ~ X)
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
mtext("Residuals vs Fitted plot")
plot(M$fitted.values, M$residuals,
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs. Fitted Plot")
abline(h = 0, lty = 2)
title("Figure 1. Residuals vs. Fitted Plot for Linear Regression Model",
line = -1, cex.main = 1.2)
mtext("The residuals appear randomly scattered around 0, indicating that the linear regression model is a good fit for the data.",
side = 1, line = 4)
plot(M)
plot(M)[0]
plot(M, which=1)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 0.1, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1.5, line = 3)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 2)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 5)
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away teams and the difference in score. The red line represents the mean score difference value.", side = 1, line = 4)
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a standard normal distribution. The red line represents the expected quantiles if the data were normally distributed.", side = 1, line = 3)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- tibble(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
x0 <- c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
predict(M, newdata=x0)
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
x0 <- data.frame(c(1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
predict(M, newdata=x0)
y0 <- 3.682 + 12.892 - (-14.758)
y0
knitr::opts_chunk$set(
echo = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = "../"
)
pacman::p_load(tidyverse, tidymodels)
df <- read.csv("AFL2019.csv")
df <- df %>%
mutate(
Home.Team=as.factor(Home.Team),
Away.Team=as.factor(Away.Team)
)
AFL_teams_2019 <- unique(df$Home.Team)
AFL_teams_2019
new_df <- df %>%
mutate(difference = Home.Score - Away.Score)
head(new_df)
X1 <- model.matrix(difference ~ Home.Team, data=new_df)
X2 <- model.matrix(difference ~ Away.Team, data=new_df)
X <- (X1-X2)[,-1]
y <- new_df$difference
M <- lm(y ~ X)
par(mar = c(9, 5, 2, 3))
plot(M, which=1)
mtext("This plot shows the relationship between the strength of home and away
teams and the difference in score. The red line represents the mean score
difference value.", side = 1, line = 8)
par(mar = c(9, 5, 2, 3))
plot(M, which=2)
mtext("This plot shows a normal quantile plot of 198 random samples from a
standard normal distribution. The red line represents the expected
quantiles if the data were normally distributed.", side = 1, line = 8)
broom::tidy(M)
broom::glance(M)
y0 <- 3.682 + 12.892 - (-14.758)
y0
setwd("D:/2023-University-of-Adelaide/s1/SM/week4")
setwd("D:/2023-University-of-Adelaide/s1/SM/week5")
knitr::opts_chunk$set(
obsecho = TRUE,
fig.width = 6,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
root.dir = '../'
)
pacman::p_load(tidyverse, tidymodels, janitor, ggplot2)
X <- seq(0,3,by=0.01) #predictor
bnd <-mean(X) #boundary between linear and nonlinear response
a <- 1 #arbitrary
b <- -2*bnd*a #match first derivatives at X=7
c <- -bnd^2*a-bnd*b #match value at X=7
Y <- X + (X>bnd) * ( a*X^2 + b*X + c) #combines linear and nonlinear response
s = 0.1
Y <- Y + rnorm(length(X),sd=s)#add noise
df <- tibble(X=X, Y=Y)
pacman::p_load(tidyverse, tidymodels, janitor, ggplot2, gglm)
X <- seq(0,3,by=0.01) #predictor
bnd <-mean(X) #boundary between linear and nonlinear response
a <- 1 #arbitrary
b <- -2*bnd*a #match first derivatives at X=7
c <- -bnd^2*a-bnd*b #match value at X=7
Y <- X + (X>bnd) * ( a*X^2 + b*X + c) #combines linear and nonlinear response
s = 0.1
Y <- Y + rnorm(length(X),sd=s)#add noise
df <- tibble(X=X, Y=Y)
gam1 <- mgcv::gam(Y ~ s(X), data = df, method = "REML")
plot(gam1,residuals=TRUE)
X <- seq(0,3,by=0.01) #predictor
bnd <-mean(X) #boundary between linear and nonlinear response
a <- 1 #arbitrary
b <- -2*bnd*a #match first derivatives at X=7
c <- -bnd^2*a-bnd*b #match value at X=7
Y <- X + (X>bnd) * ( a*X^2 + b*X + c) #combines linear and nonlinear response
s = 0.1
Y <- Y + rnorm(length(X),sd=s)#add noise
df <- tibble(X=X, Y=Y)
X <- seq(0,3,by=0.01) #predictor
bnd <-mean(X)/2 #boundary between linear and nonlinear response
a <- 3 #arbitrary
b <- -2*bnd*a #match first derivatives at X=7
c <- -bnd^2*a-bnd*b #match value at X=7
Y <- X + (X>bnd) * sin( a*X^2 + b*X + c) #combines linear and nonlinear response
s = 0.1
Y <- Y + rnorm(length(X),sd=s)#add noise
df <- tibble(X=X, Y=Y)
df %>% ggplot(aes(X,Y)) + geom_point()
gam1 <- mgcv::gam(Y ~ s(X), data = df, method = "REML")
plot(gam1,residuals=TRUE)
gam1.1 <- mgcv::gam(Y ~ s(X, bs=cr), data = df, method = "REML")
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
plot(gam1.1,residuals=TRUE)
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
gam1.2 <- mgcv::gam(Y ~ s(X, bs='tp'), data = df, method = "REML")
gam1.3 <- mgcv::gam(Y ~ s(X, bs='cr' & bs='tp'), data = df, method = "REML")
gam1.3 <- mgcv::gam(Y ~ s(X, bs='cr' & 'tp'), data = df, method = "REML")
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
gam1.2 <- mgcv::gam(Y ~ s(X, bs='tp'), data = df, method = "REML")
gam1.3 <- mgcv::gam(Y ~ s(X, bs='cr') + s(X, bs='tp'), data = df, method = "REML")
plot(gam1.1,residuals=TRUE)
plot(gam1.2,residuals=TRUE)
plot(gam1.3,residuals=TRUE)
plot(gam1.1,residuals=TRUE)
plot(gam1.2,residuals=TRUE)
plot(gam1.3,residuals=TRUE)
gam?
zxc
mgcv::gam?
sd
?mgcv::gam
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
gam1.2 <- mgcv::gam(Y ~ s(X, bs='tp'), data = df, method = "REML")
gam1.3 <- mgcv::gam(Y ~ s(s(X, bs='cr'), bs='tp'), data = df, method = "REML")
gam1.1 <- mgcv::gam(Y ~ s(X, bs='cr'), data = df, method = "REML")
gam1.2 <- mgcv::gam(Y ~ s(X, bs='tp'), data = df, method = "REML")
plot(gam1.1,residuals=TRUE)
plot(gam1.2,residuals=TRUE)
plot(gam2.1,residuals=TRUE)
gam2.1 <- mgcv::gam(Y ~ s(X), data = df, method = "P-REML")
gam2.2 <- mgcv::gam(Y ~ s(X), data = df, method = "GCV.Cp")
plot(gam2.1,residuals=TRUE)
plot(gam2.2,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1000)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1e-11)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1e-1)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1e-3)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1e-5)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X), data = df, method = "REML", sp=1e-5)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X, k=10), data = df, method = "REML", sp=1e-5)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X, k=1000), data = df, method = "REML", sp=1e-5)
gam3 <- mgcv::gam(Y ~ s(X, k=200), data = df, method = "REML", sp=1e-5)
plot(gam3,residuals=TRUE)
gam3 <- mgcv::gam(Y ~ s(X, k=200), data = df, method = "REML", sp=1e-10)
plot(gam3,residuals=TRUE)
gam4 <- mgcv::gam(Y ~ s(X, k=30), data = df, method = "REML", sp=1e-10)
plot(gam3,residuals=TRUE)
gam4 <- mgcv::gam(Y ~ s(X, k=30), data = df, method = "REML")
plot(gam3,residuals=TRUE)
gam4 <- mgcv::gam(Y ~ s(X, k=30), data = df, method = "REML")
plot(gam4,residuals=TRUE)
gam4 <- mgcv::gam(Y ~ s(X, k=30), data = df, method = "REML", sp=1e-10)
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=30), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=6), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=25), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=20), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=60), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=40), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=50), data = df, method = "REML")
plot(gam4,residuals=TRUE)
mgcv::gam.check(gam4)
gam4 <- mgcv::gam(Y ~ s(X, k=38), data = df, method = "REML")
plot(gam4,residuals=TRUE)
gam4 <- mgcv::gam(Y ~ s(X, k=40), data = df, method = "REML")
plot(gam4,residuals=TRUE)
